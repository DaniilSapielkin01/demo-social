{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/Post/AddNewPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","Container/MyPostContainer.js","components/Profile/Profile.jsx","Container/ProfileContainer.js"],"names":["module","exports","ProfileStatus","state","editMode","status","props","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","prevProps","prevState","this","onDoubleClick","onChange","autoFocus","onBlur","React","Component","ProfileInfo","profile","className","stl","content_img","src","photos","large","alt","descriptionBlock","name","Preloader","Post","item","message","likeCount","maxlength10","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","MyPosts","memo","console","log","postsElements","posts","map","p","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","mapDispatchToProps","compose","auth","isAuth","iAuth","withRouter"],"mappings":"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","file":"static/js/3.8d344959.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_img\":\"ProfileInfo_content_img__1RSce\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React from \"react\";\nimport stl from \"./ProfileInfo.module.css\";\n\nexport class ProfileStatus extends React.Component {\n  state = {\n    editMode: false,\n    status: this.props.status,\n  };\n  activateEditMode = () => {\n    this.setState({\n      editMode: true,\n    });\n  };\n  deactivateEditMode = () => {\n    this.setState({\n      editMode: false,\n    });\n    this.props.updateStatus(this.state.status);\n  };\n  onStatusChange = (e) => {\n    this.setState({\n      status: e.currentTarget.value,\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.status !== this.props.status) {\n      this.setState({ \n        status: this.props.status,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {!this.state.editMode && (\n          <div>\n            <span onDoubleClick={this.activateEditMode}>\n              {this.props.status || \"No status\"}\n            </span>\n          </div>\n        )}\n        {this.state.editMode && (\n          <div>\n            <input\n              onChange={this.onStatusChange}\n              autoFocus={true}\n              onBlur={this.deactivateEditMode}\n              value={this.state.status}\n            />\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport stl from \"./ProfileInfo.module.css\";\nimport { Preloader } from \"../../common/Preloader/Preloader\";\nimport { ProfileStatus } from \"./ProfileStatus\";\n\nexport const ProfileInfo = (props) => {\n  //Работает за счет асинхронна)\n  if (!props.profile) {\n    return <Preloader />;\n  }\n  return (\n    <div>\n      <div>\n        <img\n          className={stl.content_img}\n          src={\n            props.profile.photos.large ||\n            `https://www.interfax.ru/ftproot/textphotos/2016/09/05/panda700.jpg`\n          }\n          alt=\"image\"\n        />\n      </div>\n      <div className={stl.descriptionBlock}>\n        <h3>{props.profile.name}</h3>\n        <h3>\n          Статус:\n          <ProfileStatus\n            status={props.status}\n            updateStatus={props.updateStatus}\n          />\n        </h3>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport stl from \"./Post.module.css\";\n\nexport const Post = (props) => {\n  return (\n    <div className={stl.item}>\n      <img\n        src=\"https://i.pinimg.com/originals/3f/3d/d9/3f3dd9219f7bb1c9617cf4f154b70383.jpg\"\n        alt=\"img\"\n      />\n      {props.message}\n      <div>\n        <span>{props.likeCount}</span>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  maxLengthCreator,\n  required,\n} from \"../../../../utils/validators/validators\";\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\";\nimport { Field, reduxForm } from \"redux-form\";\n\nconst maxlength10 = maxLengthCreator(10);\n\nconst AddNewPostForm = (props) => {\n\n  \n\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          name=\"newPostText\"\n          component={Textarea}\n          validate={[required, maxlength10]}\n          placeholder=\"Post messages\"\n        />\n      </div>\n      <div>\n        <button> Add post +</button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"ProfileAddNewPostForm\",\n})(AddNewPostForm);\n","import React from \"react\";\nimport stl from \"./MyPosts.module.css\";\nimport { Post } from \"./Post/Post\";\nimport AddNewPostForm from \"./Post/AddNewPostForm\";\n\nexport const MyPosts = React.memo((props) => {\n  console.log(\"Render\");\n  debugger;\n  let postsElements = props.posts.map((p) => (\n    <Post message={p.message} likeCount={p.likeCount} />\n  ));\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div className={stl.postsBlock}>\n      <h3>My Post</h3>\n      <AddNewPostForm onSubmit={onAddPost} />\n      <div className={stl.posts}>{postsElements}</div>\n    </div>\n  );\n});\n","import { connect } from \"react-redux\";\nimport { addPostActionCreator } from \"../redux/profile-reducer\";\nimport { MyPosts } from \"../components/Profile/MyPosts/MyPosts\";\n\nconst mapStateToProps = (state) => ({\n  posts: state.profilePage.posts,\n  newPostText: state.profilePage.newPostText,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addPost: (newPostText) => {\n    dispatch(addPostActionCreator(newPostText));\n  },\n});\nexport const MyPostsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MyPosts);\n","import React from \"react\";\nimport { ProfileInfo } from \"./ProfileInfo/ProfileInfo\";\nimport { MyPostsContainer } from \"../../Container/MyPostContainer\";\n\nexport const Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\n// profile={this.profile}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport {\n  getUserProfile,\n  getStatus,\n  updateStatus,\n} from \"../redux/profile-reducer\";\nimport { Profile } from \"../components/Profile/Profile\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    //let userId взято из парам-ров в withRouter\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    //Use Thunk\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  render() {\n    // if (!props.isAuth) return <Redirect to=\"/login\" />;\n    return (\n      <div>\n        <Profile\n          {...this.props}\n          profile={this.props.profile}\n          status={this.props.status}\n          updateStatus={this.props.updateStatus}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.iAuth,\n});\nconst mapDispatchToProps = {\n  getUserProfile,\n  getStatus,\n  updateStatus,\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter\n  // WithAuthRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}