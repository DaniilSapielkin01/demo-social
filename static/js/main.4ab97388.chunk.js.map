{"version":3,"sources":["api/api.js","redux/dialogs-reducer.js","components/Users/Users.module.css","assets/images/userPhoto.jpg","assets/images/preloader.gif","components/Login/Login.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","utils/objects-halpers.js","redux/users-reducer.js","redux/users-selectors.js","Container/UsersContainer.js","redux/auth-reducer.js","components/Header/Header.jsx","Container/HeaderContainer.js","components/Login/LoginForm.jsx","components/Login/Login.jsx","redux/app-reducer.js","App.js","hoc/withSuspense.js","redux/redux-store.js","index.js","components/common/FormsControls/FormsControls.jsx","components/common/Preloader/Preloader.jsx","constans.js","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","components/common/FormsControls/FormsControls.module.css","redux/profile-reducer.js"],"names":["instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","SEND_MESSAGE","body","newMessageBody","sendMessageCreator","module","exports","Navbar","className","stl","nav","item","to","activeClassName","active","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","filter","p","map","cn","selectedPage","pageNumber","key","e","Users","props","totalUsersCount","users","us","userPhoto","src","photoUrl","alt","followed","disabled","followingInProgress","some","updateObjectInArray","items","itemId","objPropName","newObjProps","isFetching","followSuccess","FOLLOW","unfollowSuccess","UNFOLLOW","setUsers","SET_USERS","setCurrentPage","SET_CURRENT_PAGE","setTotalUsersCount","totalCount","SET_TOTAL_USERS_COUNT","toggleIsFetching","TOGGLE_IS_FETCHING","toggleIsFollowingProgress","TOGGLE_IS_FOLLOWING_PROGRESS","followUnfolloweFlow","dispatch","apiMethod","actionCreator","a","resultCode","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","mapDispatchToProps","bind","compose","connect","isAuth","setAuthUserData","SET_USER_DATA","payload","getAuthUserData","Header","header","loginBlock","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","CreateField","required","Input","formSummaryError","length","stopSubmit","_error","formData","initialized","DialogsContainer","lazy","ProfileContainer","App","initializeApp","exact","path","render","Suspense","fallback","promise","Promise","all","INITIALIZED_SUCCESS","withRouter","app","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","restProps","placeholder","validators","component","text","validate","preloader","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","value","maxLengthCreator","maxLength","profile","posts","newPost","newPostText","likesCount","postId","addPostActionCreator","setUserStatus","getUserProfile"],"mappings":"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","file":"static/js/main.4ab97388.chunk.js","sourcesContent":["import * as axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  withCredentials: true,\n  headers: {\n    \"API-KEY\": \"a18d807a-2423-4c95-88fc-34966c4ff0ed\",\n  },\n});\n\nexport const usersAPI = {\n  getUsers(currentPage = 1, pageSize = 10) {\n    return instance\n      .get(`users?page=${currentPage}&count=${pageSize} `)\n      .then((response) => response.data);\n  },\n  follow(userId) {\n    return instance.post(`follow/${userId}`);\n  },\n  unfollow(userId) {\n    return instance.delete(`follow/${userId}`);\n  },\n  getProfile(userId) {\n    console.warn(\"Obsolete method. Please profileAPI object\");\n\n    return profileAPI.getProfile(userId);\n  },\n};\n\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/${userId}`);\n  },\n  getStatus(userId) {\n    return instance.get(`profile/status/${userId}`);\n  },\n  updateStatus(status) {\n    return instance.put(`profile/status/`, {\n      status,\n    });\n  },\n};\n\nexport const authAPI = {\n  me() {\n    return instance.get(`auth/me`);\n  },\n  login(email, password, rememberMe = false) {\n    return instance.post(`auth/login`, {\n      email,\n      password,\n      rememberMe,\n    });\n  },\n  logout() {\n    return instance.delete(`auth/login`);\n  },\n};\n","import { SEND_MESSAGE, UPDATE_NEW_MESSAGE_BODY } from \"../constans\";\nlet initialState = {\n  dialogs: [\n    { id: 1, name: \"Daniil\" },\n    { id: 2, name: \"Dima\" },\n    { id: 3, name: \"Vladilen\" },\n  ],\n  messages: [\n    { id: 1, message: \"Hello , boy _ \" },\n    { id: 2, message: \"Hi\" },\n  ],\n};\n\nexport const dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_MESSAGE:\n      let body = action.newMessageBody;\n      return {\n        ...state,\n        messages: [...state.messages, { id: 6, message: body }],\n      };\n    default:\n      return state;\n  }\n};\n\nexport const sendMessageCreator = (newMessageBody) => ({\n  type: SEND_MESSAGE,\n  newMessageBody,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__17MJB\",\"selectedPage\":\"Users_selectedPage__J63sh\"};","module.exports = __webpack_public_path__ + \"static/media/userPhoto.f355ffed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.37533f84.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__3cy0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport stl from \"./Navbar.module.css\";\n\nexport const Navbar = () => {\n  return (\n    <nav className={stl.nav}>\n      <div className={stl.item}>\n        <NavLink to=\"/profile\" activeClassName={stl.active}>\n          Profile\n        </NavLink>\n      </div>\n      <div className={stl.item}>\n        <NavLink to=\"/dialogs\" activeClassName={stl.active}>\n          Messages\n        </NavLink>\n      </div>\n      <div className={stl.item}>\n        <NavLink to=\"/news\" activeClassName={stl.active}>\n          News\n        </NavLink>\n      </div>\n      <div className={stl.item}>\n        <NavLink to=\"/music\" activeClassName={stl.active}>\n          Music\n        </NavLink>\n      </div>\n      <div className={stl.item}>\n        <NavLink to=\"/users\" activeClassName={stl.active}>\n          Users\n        </NavLink>\n      </div>\n    </nav>\n  );\n};\n","import React, { useState } from \"react\";\nimport stl from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nexport let Paginator = ({\n  totalItemsCount,\n  pageSize,\n  currentPage,\n  onPageChanged,\n  portionSize = 10,\n}) => {\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n  let pages = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n\n  return (\n    <div className={stl.paginator}>\n      {portionNumber > 1 && (\n        <button\n          onClick={() => {\n            setPortionNumber(portionNumber - 1);\n          }}\n        >\n          PREV\n        </button>\n      )}\n\n      {pages\n        .filter(\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\n        )\n        .map((p) => {\n          return (\n            <span\n              className={cn(\n                {\n                  [stl.selectedPage]: currentPage === p,\n                },\n                stl.pageNumber\n              )}\n              key={p}\n              onClick={(e) => {\n                onPageChanged(p);\n              }}\n            >\n              {p}\n            </span>\n          );\n        })}\n      {portionCount > portionNumber && (\n        <button\n          onClick={() => {\n            setPortionNumber(portionNumber + 1);\n          }}\n        >\n          NEXT\n        </button>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport stl from \"./Users.module.css\";\nimport userPhoto from \"../../assets/images/userPhoto.jpg\";\nimport { NavLink } from \"react-router-dom\";\nimport { Paginator } from \"../common/Paginator/Paginator\";\n\nexport const Users = (props) => {\n  const { totalUsersCount, pageSize, currentPage, onPageChanged } = props;\n\n  let pages = [];\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n  return (\n    <div>\n      <Paginator\n        totalItemsCount={totalUsersCount}\n        pageSize={pageSize}\n        currentPage={currentPage}\n        onPageChanged={onPageChanged}\n      />\n\n      <button onClick={props.getUsers}>Получить пользователей</button>\n      {props.users.map((us) => (\n        <div>\n          <span>\n            <div>\n              <NavLink to={`/profile/${us.id}`}>\n                <img\n                  className={stl.userPhoto}\n                  src={us.photoUrl ? us.photoUrl : userPhoto}\n                  alt=\"img\"\n                />\n              </NavLink>\n            </div>\n            <div>\n              {us.followed ? (\n                <button\n                  disabled={props.followingInProgress.some(\n                    (id) => id === us.id\n                  )}\n                  onClick={() => {\n                    props.unfollow(us.id);\n                  }}\n                >\n                  Unfollow\n                </button>\n              ) : (\n                <button\n                  disabled={props.followingInProgress.some(\n                    (id) => id === us.id\n                  )}\n                  onClick={() => {\n                    props.follow(us.id);\n                  }}\n                >\n                  Follow\n                </button>\n              )}\n            </div>\n          </span>\n          <span>\n            <span>\n              <div>{us.name}</div>\n              <div>{us.status}</div>\n            </span>\n            <span>{/* <div>{us.location.city}</div> */}</span>\n          </span>\n        </div>\n      ))}\n    </div>\n  );\n};\n","export let updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n  return items.map((us) => {\n    if (us[objPropName] === itemId) {\n      return { ...us, ...newObjProps };\n    }\n    return us;\n  });\n};\n","import {\n  SET_CURRENT_PAGE,\n  FOLLOW,\n  UNFOLLOW,\n  SET_USERS,\n  SET_TOTAL_USERS_COUNT,\n  TOGGLE_IS_FETCHING,\n  TOGGLE_IS_FOLLOWING_PROGRESS,\n} from \"../constans\";\nimport { usersAPI } from \"../api/api\";\nimport { updateObjectInArray } from \"../utils/objects-halpers\";\n\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 2,\n  isFetching: false,\n  followingInProgress: [],\n};\n\nexport const usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USERS:\n      return {\n        ...state,\n        users: action.users,\n      };\n    case FOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.id, \"id\", {\n          followed: true,\n        }),\n      };\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.id, \"id\", {\n          followed: false,\n        }),\n        // users: state.users.map((us) => {\n        //   if (us.id === action.userId) {\n        //     return { ...us, followed: false };\n        //   }\n        //   return us;\n        // }),\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage,\n      };\n    case SET_TOTAL_USERS_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.totalCount,\n      };\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter((id) => id !== action.userId),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = (userId) => ({\n  type: FOLLOW,\n  userId,\n});\nexport const unfollowSuccess = (userId) => ({\n  type: UNFOLLOW,\n  userId,\n});\nexport const setUsers = (users) => ({\n  type: SET_USERS,\n  users,\n});\nexport const setCurrentPage = (currentPage) => ({\n  type: SET_CURRENT_PAGE,\n  currentPage,\n});\nexport const setTotalUsersCount = (totalCount) => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalCount,\n});\nexport const toggleIsFetching = (isFetching) => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching,\n});\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId,\n});\n\nexport const requestUsers = (page, pageSize) => {\n  return async (dispatch) => {\n    dispatch(toggleIsFetching(true));\n    dispatch(setCurrentPage(page));\n\n    let data = await usersAPI\n      .getUsers(page, pageSize)\n      .dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n  };\n};\n// ---- refactoring function for follow vs unfollow\nconst followUnfolloweFlow = async (\n  dispatch,\n  userId,\n  apiMethod,\n  actionCreator\n) => {\n  dispatch(toggleIsFollowingProgress(true, userId));\n  let response = await apiMethod(userId);\n  if (response.data.resultCode == 0) {\n    dispatch(actionCreator(userId));\n  }\n  dispatch(toggleIsFollowingProgress(false, userId));\n};\nexport const follow = (userId) => {\n  return async (dispatch) => {\n    followUnfolloweFlow(\n      dispatch,\n      userId,\n      usersAPI.follow.bind(usersAPI),\n      followSuccess\n    );\n  };\n};\nexport const unfollow = (userId) => {\n  return async (dispatch) => {\n    followUnfolloweFlow(\n      dispatch,\n      userId,\n      usersAPI.unfollow.bind(usersAPI),\n      unfollowSuccess\n    );\n  };\n};\n","import { createSelector } from \"reselect\";\n\nconst getUsersSelector = (state) => {\n  return state.usersPage.users;\n};\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n  return users.filter((us) => true);\n});\n\n// ---   ---   ---   ---   ---   ---   ---   ---   ---\nexport const getPageSize = (state) => {\n  return state.usersPage.pageSize;\n};\nexport const getTotalUsersCount = (state) => {\n  return state.usersPage.totalUsersCount;\n};\nexport const getCurrentPage = (state) => {\n  return state.usersPage.currentPage;\n};\nexport const getIsFetching = (state) => {\n  return state.usersPage.isFetching;\n};\nexport const getFollowingInProgress = (state) => {\n  return state.usersPage.followingInProgress;\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Users } from \"../components/Users/Users\";\nimport {\n  setUsers,\n  follow,\n  unfollow,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching,\n  toggleIsFollowingProgress,\n} from \"../redux/users-reducer\";\nimport { Preloader } from \"../components/common/Preloader/Preloader\";\nimport { usersAPI } from \"../api/api\";\nimport { compose } from \"redux\";\n// import { WithAuthRedirect } from \"../hoc/WithAuthRedirect\";\nimport {\n  getCurrentPage,\n  getFollowingInProgress,\n  getIsFetching,\n  getPageSize,\n  getTotalUsersCount,\n  getUsers,\n} from \"../redux/users-selectors\";\n\nclass UsersContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    usersAPI\n      .getUsers(this.props.currentPage, this.props.pageSize)\n      .then((data) => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(data.items);\n        this.props.setTotalUsersCount(data.totalCount);\n      });\n  }\n\n  onPageChanged = (pageNumber) => {\n    this.props.setCurrentPage(pageNumber);\n    this.props.toggleIsFetching(false);\n\n    usersAPI.getUsers(pageNumber, this.props.pageSize).then((data) => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(data.items);\n    });\n  };\n\n  render() {\n    const {\n      isFetching,\n      totalUsersCount,\n      pageSize,\n      currentPage,\n      users,\n      follow,\n      unfollow,\n      toggleIsFollowingProgress,\n      followingInProgress,\n    } = this.props;\n\n    return (\n      <>\n        <div>\n          {isFetching ? (\n            <Preloader />\n          ) : (\n            <Users\n              totalUsersCount={totalUsersCount}\n              pageSize={pageSize}\n              currentPage={currentPage}\n              onPageChanged={this.onPageChanged}\n              users={users}\n              follow={follow}\n              unfollow={unfollow}\n              toggleIsFollowingProgress={toggleIsFollowingProgress}\n              followingInProgress={followingInProgress}\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\n// const mapStateToProps = (state) => ({\n//   users: state.usersPage.users,\n//   pageSize: state.usersPage.pageSize,\n//   totalUsersCount: state.usersPage.totalUsersCount,\n//   currentPage: state.usersPage.currentPage,\n//   isFetching: state.usersPage.isFetching,\n//   followingInProgress: state.usersPage.followingInProgress,\n// });\nconst mapStateToProps = (state) => ({\n  users: getUsers(state),\n  pageSize: getPageSize(state),\n  totalUsersCount: getTotalUsersCount(state),\n  currentPage: getCurrentPage(state),\n  isFetching: getIsFetching(state),\n  followingInProgress: getFollowingInProgress(state),\n});\n\nconst mapDispatchToProps = {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching,\n  toggleIsFollowingProgress,\n\n  //Это создает connect\n  // setIsFetching: (isFetching) => {\n  // dispatch(toggleIsFetchingAC(isFetching));\n  // },\n};\n\nexport default compose(\n  // WithAuthRedirect,\n  connect(mapStateToProps, mapDispatchToProps)\n)(UsersContainer);\n","import { SET_USER_DATA } from \"../constans\";\nimport { authAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\n\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false,\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nconst setAuthUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    userId,\n    email,\n    login,\n    isAuth,\n  },\n});\n\n//Use Thunk\nexport const getAuthUserData = () => async (dispatch) => {\n  let response = await authAPI.me();\n  if (response.data.resultCode === 0) {\n    let { id, login, email } = response.data.data;\n    dispatch(setAuthUserData(id, login, email, true));\n  }\n};\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n  let response = await authAPI.login(email, password, rememberMe);\n  if (response.data.resultCode === 0) {\n    dispatch(getAuthUserData());\n  } else {\n    let message =\n      response.data.messages.length > 0\n        ? response.data.messages[0]\n        : \"Some error\";\n    dispatch(stopSubmit(\"login\", { _error: message }));\n  }\n};\nexport const logout = () => async (dispatch) => {\n  let response = await authAPI.logout();\n  if (response.data.resultCode === 0) {\n    dispatch(setAuthUserData(null, null, null, false));\n  }\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport stl from \"./Header.module.css\";\n\nexport const Header = (props) => {\n  return (\n    <header className={stl.header}>\n      <img\n        src=\"https://is5-ssl.mzstatic.com/image/thumb/Purple124/v4/5c/f2/72/5cf27278-05ee-5433-5110-6bf79b05adc9/AppIcon-0-0-1x_U007emarketing-0-0-0-7-0-0-sRGB-0-0-0-GLES2_U002c0-512MB-85-220-0-0.png/1200x630wa.png\"\n        alt=\"img\"\n      />\n      <div className={stl.loginBlock}>\n        {props.isAuth ? (\n          <div>\n            {props.login} - <button onClick={props.logout}>Log out</button>\n          </div>\n        ) : (\n          <NavLink to=\"/login\">Login</NavLink>\n        )}\n      </div>\n    </header>\n  );\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../redux/auth-reducer\";\nimport { Header } from \"../components/Header/Header\";\n\nclass HeaderContainer extends React.Component {\n  render() {\n    return <Header {...this.props} />;\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  login: state.auth.login,\n});\nconst mapDispatchToProps = {\n  logout,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { CreateField, Input } from \"../common/FormsControls/FormsControls\";\nimport { required, maxLengthCreator } from \"../../utils/validators/validators\";\nimport stl from \"./Login.module.css\";\n\nconst LoginForm = ({ handleSubmit, error }) => {\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        {CreateField(\"Email\", \"email\", [required], Input)}\n        {CreateField(\"Password\", \"password\", [required], Input, {\n          type: \"password\",\n        })}\n        {CreateField(\n          null,\n          \"rememberMe\",\n          [required],\n          Input,\n          { type: \"checkbox\" },\n          \"Remember me\"\n        )}\n        <div>\n          {error && <div className={stl.formSummaryError}>{error}</div>}\n          <button>Login</button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport const LoginReduxForm = reduxForm({\n  //дали уникальное имя\n  form: \"login\",\n})(LoginForm);\n\n//Если есть вопрос по (reduxForm, handleSubmit, onSubmit), номер #75 35:30\n","import React from \"react\";\nimport { LoginReduxForm } from \"./LoginForm\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\n\nexport const Login = ({ login, isAuth }) => {\n  const onSubmit = (formData) => {\n    login(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (isAuth) {\n    return <Redirect to=\"/profile\" />;\n  }\n  //в пропсы передаем фунцию  onSudmit которая находится в HOC reduxForm\n  return (\n    <div>\n      <h2>Login</h2>\n      <LoginReduxForm onSubmit={onSubmit} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n});\nconst mapDispatchToProps = {\n  login,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import { INITIALIZED_SUCCESS } from \"../constans\";\nimport { getAuthUserData } from \"./auth-reducer\";\n\nconst initialState = {\n  initialized: false,\n};\n\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return {\n        ...state,\n        initialized: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS,\n});\nexport const initializeApp = () => (dispatch) => {\n  let promise = dispatch(getAuthUserData());\n\n  Promise.all([promise])\n  .then(() => {\n    dispatch(initializedSuccess());\n  });\n};\n","import React from \"react\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\nimport \"./App.css\";\nimport { Navbar } from \"./components/Navbar/Navbar\";\nimport UsersContainer from \"./Container/UsersContainer\";\nimport HeaderContainer from \"./Container/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport { initializeApp } from \"./redux/app-reducer\";\nimport { Preloader } from \"./components/common/Preloader/Preloader\";\nimport { WithSuspense } from \"./hoc/withSuspense\";\n// import DialogsContainer from \"./Container/DialogsContainer\";\n// import ProfileContainer from \"./Container/ProfileContainer\";\n\nconst DialogsContainer = React.lazy(() =>\n  import(\"./Container/DialogsContainer\")\n);\nconst ProfileContainer = React.lazy(() =>\n  import(\"./Container/ProfileContainer\")\n);\n\nclass App extends React.Component {\n  componentDidMount() {\n    //Use Thunk\n    this.props.initializeApp();\n  }\n\n  render() {\n    // debugger;\n    if (!this.props.initialized) {\n      return <Preloader />;\n    } else {\n      return (\n        <div className=\"app-wrapper\">\n          <HeaderContainer />\n          <Navbar />\n          <div className=\"app-wrapper-content\">\n            <Route\n              exact\n              path=\"/dialogs\"\n              render={() => (\n                <React.Suspense fallback={<Preloader />}>\n                  <DialogsContainer />\n                </React.Suspense>\n              )}\n            />\n            <Route path=\"/profile/:userId?\" render={WithSuspense(ProfileContainer)} />\n            <Route path=\"/users\" render={() => <UsersContainer />} />\n            <Route path=\"/login\" render={() => <Login />} />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n});\nconst mapDispatchToProps = {\n  initializeApp,\n};\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(App);\n","import React from \"react\";\nimport { Preloader } from \"../components/common/Preloader/Preloader\";\n\nexport const WithSuspense = (Component) => {\n  return (props) => {\n    return (\n      <React.Suspense fallback={<div>loading...</div>}>\n        <Component {...props} />\n      </React.Suspense>\n    );\n  };\n};\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from \"redux-form\";\n\nimport { profileReducer } from \"./profile-reducer\";\nimport { dialogsReducer } from \"./dialogs-reducer\";\nimport { usersReducer } from \"./users-reducer\";\nimport { authReducer } from \"./auth-reducer\";\nimport { appReducer } from \"./app-reducer\";\n\nlet reducers = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  app: appReducer,\n  form: formReducer,\n});\n\nexport let store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./redux/redux-store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\nimport stl from \"./FormsControls.module.css\";\nimport { Field } from \"redux-form\";\n\nconst FormControl = ({ input, meta, child, ...props }) => {\n  const hasError = meta.touched && meta.error;\n  return (\n    <div className={stl.formControl + \" \" + (hasError ? stl.error : \"\")}>\n      <div>{props.children}</div>\n      {hasError && <span>{meta.error}</span>}\n    </div>\n  );\n};\n\nexport const Textarea = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <textarea {...input} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const Input = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <input {...input} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const CreateField = (\n  placeholder,\n  name,\n  validators,\n  component,\n  props = {},\n  text = \"\"\n) => {\n  return (\n    <div>\n      <Field\n        validate={validators}\n        placeholder={placeholder}\n        component={component}\n        name={name}\n        {...props}\n      />\n      {text};\n    </div>\n  );\n};\n","import React from \"react\";\nimport preloader from \"../../../assets/images/preloader.gif\";\n\nexport const Preloader = (props) => {\n  return (\n    <div>\n      <img src={preloader} />\n    </div>\n  );\n};\n","export const ADD_POST = \"ADD_POST\";\nexport const UPDATE_NEW_MESSAGE_BODY = \"UPDATE_NEW_MESSAGE_BODY\";\nexport const SEND_MESSAGE = \"SEND_MESSAGE \";\nexport const FOLLOW = \"FOLLOW\";\nexport const UNFOLLOW = \"UNFOLLOW\";\nexport const SET_USERS = \"SET_USERS\";\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nexport const SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nexport const TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nexport const SET_USER_PROFILE = \"SET_USER_PROFILE\";\nexport const SET_USER_DATA = \"SET_USER_DATA\";\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\nexport const SET_STATUS = \"SET_STATUS\";\nexport const INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\nexport const DELETE_POST = \"DELETE_POST\"","export const required = (value) => {\n  if (value) {\n    return undefined;\n  } else {\n    return \"Field is required\";\n  }\n};\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n  if (value && value.length > maxLength)\n    return `Max length is ${maxLength} symbols`;\n  return undefined;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","import {\n  ADD_POST,\n  UPDATE_NEW_POST_TEXT,\n  SET_USER_PROFILE,\n  SET_STATUS,\n  DELETE_POST,\n} from \"../constans\";\nimport { profileAPI, usersAPI } from \"../api/api\";\n\nlet initialState = {\n  profile: null,\n  posts: [\n    { id: 1, message: \"First post \" },\n    { id: 2, message: \"Second post )\" },\n  ],\n\n  status: \"\",\n};\n\nexport const profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: 5,\n        message: action.newPostText,\n        likesCount: 0,\n      };\n      return {\n        ...state,\n        posts: [...state.posts, newPost],\n        newPostText: \"\",\n      };\n\n    case SET_USER_PROFILE:\n      return {\n        ...state,\n        profile: action.profile,\n      };\n    case SET_STATUS:\n      return {\n        ...state,\n        status: action.status,\n      };\n\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((p) => p.id !== action.postId),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = (newPostText) => ({\n  type: ADD_POST,\n  newPostText,\n});\nexport const setUserProfile = (profile) => ({\n  type: SET_USER_PROFILE,\n  profile,\n});\n\nexport const setUserStatus = (status) => ({\n  type: SET_STATUS,\n  status,\n});\nexport const deletePost = (postId) => ({\n  type: DELETE_POST,\n  postId,\n});\n\n//Use thunk\nexport const getUserProfile = (userId) => async (dispatch) => {\n  const response = await usersAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\n\nexport const getStatus = (userId) => async (dispatch) => {\n  const response = await profileAPI.getStatus(userId);\n  dispatch(setUserStatus(response.data));\n};\n\nexport const updateStatus = (status) => async (dispatch) => {\n  const response = await profileAPI.updateStatus(status);\n  if (response.data.resultCode === 0) {\n    dispatch(setUserStatus(response.data));\n  }\n};\n"],"sourceRoot":""}